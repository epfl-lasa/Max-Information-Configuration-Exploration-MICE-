# GENERAL PARAMETERS=
# Path where data is recorded
savePath: "/home/sthithpragya/Study/Thesis/data_for_learning/recorded_data/sinsuoidal_test"
#------------------------------------------

# ROS PARAMETERS
# Topic to send command to manipulator
publishToRobot: "/iiwa/PositionController/command" # type -> std_msgs::Float64MultiArray

# Topic to read the robot sensor measurements 
robotJointState: "/iiwa/joint_states" # type -> sensor_msgs::JointState

# NOTE: If the desired message types for these topics differ, 
# manually change the message type in the source files (mention location)

pubFreq: 200
#------------------------------------------
# ROBOT PARAMETERS

totalJoints: 7

qLimUpper:
  - 2.7925 
  - 1.2217
  - 2.7925
  - 1.9198
  - 2.7925
  - 1.9198
  - 2.8797

qLimLower:
  - -2.7925 
  - -1.2217
  - -2.7925
  - -1.9198
  - -2.7925
  - -1.9198
  - -2.8797

qDotLimUpper:
  - 1.4835
  - 1.4835
  - 1.7453
  - 1.3089
  - 2.2689
  - 2.3561
  - 2.3561

qDotLimLower:
  - -1.4835
  - -1.4835
  - -1.7453
  - -1.3089
  - -2.2689
  - -2.3561
  - -2.3561

#------------------------------------------

  # PolarDS PARAMETERS
dT: 0.005
alpha: 1.0
beta: 0.5
randPointCount: 50 # a choice of number of random points during optimization
increm: 0.1
angleDispLimit: 7.85 # 2.5 M_PI
rLim:
  - 0.25
  - 1
#------------------------------------------

# TRAJECTORY PARAMETERS
trajectoryType: "HLPolarDS"
# trajectoryType: "sinusoid"

# HLPolarDS parameters
#Manipulator's initial goal configuration (on starting data collection using HLPolarDS)
qStart: 
  - -0.2
  - 1.0
  - 0.2
  - -1.2
  - 1.0
  - 0.8
  - 0.1

qDotStart:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0

# Sinusoidal parameters





# #------------------------------------------------------------------
# ## Not used
# #------------------------------------------------------------------

# #-------------------------------------------
# excitationTraj: "PolarDS"
# # excitationTraj: "Sinusoid"

#  #------------------------------------------
# ## Low-level controller selection
# # controllerType: "TorqueController" 
# controllerType: "PositionController" 
# # controllerType: "PositionTorqueController"

# #------------------------------------------
# ## Sinusoid trajectory parameters
# timePeriod: 5.0 # Duration after which the sinusoid frequency changes
# timeFactor: 0.5 # To scale up or down the speed of joints

# # beta: [0.06, 0.025, 0.07, 0.08, 0.09, 0.1, 0.09]
# # beta: [0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]
# theta: [0.94, 1.25, 1.57, 1.88, 2.19, 2.51, 2.82] # 0.3*M_PI, 0.4*M_PI, 0.5*M_PI, 0.6*M_PI, 0.7*M_PI, 0.8*M_PI, 0.9*M_PI]

# kInit:
#   - 0.11
#   - 0.14
#   - 0.15
#   - 0.16
#   - 0.17
#   - 0.18
#   - 0.19


# #------------------------------------------
# ## Torque controller gains

# # For the starter node
# startTorquePropGain:
#   - 20.0
#   - 20.0
#   - 20.0
#   - 20.0
#   - 20.0
#   - 20.0
#   - 20.0

# startTorqueDerGain:
#   - 2.0
#   - 2.0
#   - 2.0
#   - 2.0
#   - 2.0
#   - 2.0
#   - 2.0

# # For the DS nodes
# torquePropGain:
#   - 100.0
#   - 175.0
#   - 100.0
#   - 100.0
#   - 50.0
#   - 50.0
#   - 50.0
  
# torqueDerGain:
#   - 5.0
#   - 8.75
#   - 5.0
#   - 5.0 
#   - 2.5
#   - 2.5
#   - 2.5

# ## ROS-Topic names
# topicNames:
#   - "/iiwa/jointCommand0"
#   - "/iiwa/jointCommand1"
#   - "/iiwa/jointCommand2"
#   - "/iiwa/jointCommand3"
#   - "/iiwa/jointCommand4"
#   - "/iiwa/jointCommand5"
#   - "/iiwa/jointCommand6"
# #-------------------------------------------  

# useArtificialVel: False

# epsilon: 0.005
# delRhoMax: 0.5
# velocityFilterGain: 0.3

# #------------------------------------------
# ## High-level controller parameters
# qBound: 0.3
# qDotBound: 0.3
# margin: 0.0

# targetSkipDelayVector:
#   - 6.5 
#   - 6.5 
#   - 6.5
#   - 6.5
#   - 6.5
#   - 6.5 
#   - 6.5 


# #------------------------------------------
# ## Gravity compensation estimation parameters
# qError: 0.1
# qDotError: 0.05
# qdDotError: 100



# # qLim = {160*(M_PI/180), 70*(M_PI/180), 160*(M_PI/180), 110*(M_PI/180), 160*(M_PI/180), 110*(M_PI/180), 165*(M_PI/180)};
# # qDotLim = {85*(M_PI/180), 85*(M_PI/180), 100*(M_PI/180), 75*(M_PI/180), 130*(M_PI/180), 135*(M_PI/180), 135*(M_PI/180)};



## Not Used
# looping: "open" 
# looping: "closed"

# open    - DS uses the desired joint position and velocity (as computed by the DS) to compute the subsequent trajectory
# closed  - DS uses the actual joint position and velocity to compute the subsequent phase space trajectory
